== Further readings

Here are some documentation I found on the web which may be interesting to read.  (I have not yet examined all their contents yet.)

=== IBM developerWorks

* http://www.ibm.com/developerworks/[IBM developerWorks]
* http://www.ibm.com/developerworks/linux/[Linux]
* http://www.ibm.com/developerworks/linux/newto/index.html[New to Linux programming and Linux system administration]
* http://www.ibm.com/developerworks/views/aix/libraryview.jsp?search_by=tips[AIX and UNIX Technical library]

=== Speaking UNIX

This tutorial series by Martin Streicher (martin.streicher@gmail.com) provide many examples of basic UNIX operations.

* http://www.ibm.com/developerworks/aix/library/au-unix-commandline/index.html[Speaking UNIX, Part 1: Command the power of the command line]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix2.html[Speaking UNIX, Part 2: Working smarter, not harder]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix3.html[Speaking UNIX, Part 3: Do everything right from the command line]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix4/index.html[Speaking UNIX, Part 4: UNIX ownership and permissions provide for privacy and participation]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix5.html[Speaking UNIX, Part 5: Data, data everywhere]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix6.html[Speaking UNIX, Part 6: Automate, automate, automate!]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix7.html[Speaking UNIX, Part 7: Command-line locution]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix8/index.html[Speaking UNIX, Part 8: UNIX processes]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix9/index.html[Speaking UNIX, Part 9: Regular expressions]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix10/index.html[Speaking UNIX, Part 10: Customize your shell]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix11/index.html[Speaking UNIX, Part 11: Ramble around the UNIX file system]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix12/index.html[Speaking UNIX, Part 12: Do-it-yourself projects]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix13/index.html[Speaking UNIX, Part 13: Ten more command-line concoctions]
* http://www.ibm.com/developerworks/aix/library/au-speakingunix14/index.html[Speaking UNIX, Part 14: Manage Ruby and gems with RVM]
* http://www.ibm.com/developerworks/aix/library/au-spunix_greattools/index.html[Speaking UNIX: 10 great tools for any UNIX system]

Please note some contents may be already outdated, etc.  So use these as secondary reference documents.

=== C/C++ programming FAQ

* http://c-faq.com/[comp.lang.c Frequently Asked Questions] (1995-2005)
* http://www.andromeda.com/people/ddyer/topten.html[The Top 10 Ways to get screwed by the "C" programming language] (2011)
* http://www.parashift.com/c\+\+-faq/[C++ FAQ] (2012)
* http://www.stroustrup.com/C\+\+11FAQ.html[C++11 FAQ] (2013)

=== System programming

* http://space.wccnet.edu/~chasselb/linux275/index2.html[CPS275 - Linux/Unix System Programming]
* http://shellscript.sunone.me[UNIX & Linux command and shell script reference] (Japanese)

=== Kernel programming

* http://www.tldp.org/LDP/lkmpg/2.6/html/lkmpg.html[The Linux Kernel Module Programming Guide] by Peter Jay Salzman (2001 - 2007)
* http://www.win.tue.nl/~aeb/linux/lk/lk.html[The Linux kernel] by Andries Brouwer (2003)

